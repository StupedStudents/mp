     1                                  [BITS 16]
     2                                  [ORG 0]	
     3                                  
     4 00000000 EB0C                    jmp	entry 
     5                                  
     6 00000002 4C6F6164696E6700        	msg_loading 		db "Loading", 0
     7 0000000A 2E00                    	msg_loading_proc 		db ".", 0
     8 0000000C 0A0D                    	msg_crlf 			db 0x0a, 0x0d ;Всем знакомые 2 байты, для переноса строки и каретки.
     9                                  
    10                                  entry:
    11 0000000E FA                      	cli				
    12 0000000F B8C007                  	mov		ax, 0x07c0		
    13 00000012 8ED8                    	mov		ds, ax
    14 00000014 B80090                  	mov 	ax, 0x9000		
    15 00000017 8EC0                    	mov 	es, ax
    16 00000019 31F6                    	xor 	si, si		
    17 0000001B 31FF                    	xor 	di, di
    18 0000001D FB                      	sti		
    19                                  
    20 0000001E B98000                  	mov 	cx, 128		
    21 00000021 F366A5                  	rep 	movsd
    22                                  
    23 00000024 EA[2900]0090            	jmp 	0x9000:start	
    24                                  
    25                                  
    26                                  start:
    27 00000029 BE[0200]                	mov		si, msg_loading	
    28 0000002C E86C00                  	call	print
    29                                  
    30 0000002F 8CC8                    	mov 	ax, cs		
    31 00000031 8ED8                    	mov 	ds, ax
    32 00000033 8ED0                    	mov		ss, ax
    33                                  
    34 00000035 BF0100                  	mov 	di, 1			
    35 00000038 B89002                  	mov 	ax, 0x290
    36 0000003B 31DB                    	xor 	bx, bx
    37                                  
    38                                  .loop:
    39 0000003D BE[0A00]                	mov		si, msg_loading_proc
    40 00000040 E85800                  	call	print
    41                                  
    42 00000043 B95000                  	mov 	cx, 0x50
    43 00000046 8EC1                    	mov 	es, cx
    44                                  
    45 00000048 57                      	push 	di
    46                                  		
    47 00000049 D1EF                    	shr 	di, 1
    48 0000004B 0F92C6                  	setc 	dh
    49 0000004E 89F9                    	mov 	cx, di
    50 00000050 86CD                    	xchg 	cl, ch
    51                                  
    52 00000052 5F                      	pop	di
    53 00000053 83FF0A                  	cmp 	di, 10
    54 00000056 741D                    	je 	.quit
    55                                  
    56 00000058 E82E00                  	call 	read_cylinder		
    57                                  
    58 0000005B 60                      	pusha
    59 0000005C 1E                      	push 	ds
    60                                  
    61 0000005D B95000                  	mov 	cx, 0x50			
    62 00000060 8ED9                    	mov 	ds, cx
    63 00000062 8EC0                    	mov 	es, ax
    64 00000064 31FF                    	xor 	di, di
    65 00000066 31F6                    	xor 	si, si
    66 00000068 B90024                  	mov 	cx, 0x2400
    67 0000006B F3A4                    	rep 	movsb
    68                                  
    69 0000006D 1F                      	pop 	ds
    70 0000006E 61                      	popa
    71                                  
    72 0000006F 47                      	inc 	di				
    73 00000070 054002                  	add 	ax, 0x240
    74 00000073 EBC8                    	jmp 	short .loop			
    75                                  
    76                                  .quit:
    77 00000075 B85000                  	mov 	ax, 0x50			
    78 00000078 8EC0                    	mov 	es, ax
    79 0000007A BB0000                  	mov 	bx, 0
    80 0000007D B500                    	mov 	ch, 0
    81 0000007F B600                    	mov 	dh, 0
    82 00000081 E80500                  	call 	read_cylinder
    83                                  
    84 00000084 EA00070000              	jmp 	0x0000:0x0700		
    85                                  
    86                                  read_cylinder:				
    87                                  
    88 00000089 60                      	pusha
    89                                  
    90                                  .start:
    91 0000008A B402                    	mov 	ah, 0x02
    92 0000008C B012                    	mov 	al, 18
    93 0000008E B101                    	mov 	cl, 1
    94 00000090 CD13                    	int 	0x13
    95                                  
    96 00000092 61                      	popa
    97 00000093 C3                      	ret
    98                                  
    99                                  printc:					;Выведим один символ al
   100 00000094 60                      	pusha
   101 00000095 B40E                    	mov 	ah, 0x0E
   102 00000097 CD10                    	int 	0x10
   103 00000099 61                      	popa
   104 0000009A C3                      	ret
   105                                  
   106                                  print:					;Выведим строку si
   107 0000009B 60                      	pusha
   108                                  .loop:
   109 0000009C AC                      	lodsb
   110 0000009D 08C0                    	or 		al, al
   111 0000009F 7409                    	jz 		.quit
   112 000000A1 B40E                    	mov 	ah, 0x0e
   113 000000A3 BB0700                  	mov 	bx, 0x7
   114 000000A6 CD10                    	int 	0x10
   115 000000A8 EBF2                    	jmp 	.loop
   116                                  .quit:
   117 000000AA 61                      	popa
   118 000000AB C3                      	ret
   119                                  
   120                                  
   121 000000AC 00<rept>                TIMES 510 - ($-$$) db 0			;Ставим нулевые байты до 510го байта
   122 000001FE 55AA                    dw 0xaa55					;Ставим сигнатуру, говорим BIOS, что это загрузочный сектор
   123                                  
   124 00000200 <incbin>                incbin   'main.bin'
   125 00003B14 00<rept>                TIMES 1474560 - 512 - ($-$$) db 0
